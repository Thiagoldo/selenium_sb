import math

jogos = ['1 2 1 1 1 1 2 3',
'1 3 1 3 2 3 3 3',
'3 1 3 2 1 1 1 1',
'1 2 1 3 1 2 3 3',
'1 1 3 3 1 3 1 2',
'1 1 2 3 1 1 3 1',
'3 2 1 3 2 1 2 3',
'1 1 3 3 3 3 2 1',
'2 1 2 2 3 3 3 1',
'2 1 1 2 2 1 3 3',
'3 3 1 2 1 1 3 3',
'1 2 2 3 2 2 1 3',
'3 3 1 2 1 3 2 3',
'2 3 3 2 3 1 1 3',
'1 2 2 3 2 2 2 2',
'3 1 2 3 3 2 3 2',
'2 1 2 2 3 2 1 1',
'3 2 3 1 2 1 1 1',
'2 1 3 2 3 3 3 1',
'3 3 2 1 2 2 3 2',
'3 3 2 1 3 2 1 3',
'2 3 3 1 1 3 3 2',
'3 1 2 1 1 3 1 1',
'3 1 3 1 3 3 3 2',
'2 2 2 2 3 1 3 2',
'3 2 1 3 2 3 1 2',
'3 1 2 3 1 3 1 1',
'1 1 3 1 3 2 3 2',
'2 1 3 1 3 1 3 2',
'1 1 3 3 3 2 2 2',
'3 2 3 3 3 3 2 3',
'2 2 1 2 1 1 3 2',
'2 3 1 3 3 3 1 1',
'3 3 3 1 1 3 2 3',
'2 1 1 1 3 3 3 3',
'2 3 2 2 3 3 1 2',
'2 3 3 3 3 3 1 3',
'2 2 3 1 1 1 2 3',
'3 2 2 3 3 2 2 1',
'3 3 1 1 3 3 1 1',
'3 1 3 3 1 3 3 3',
'3 2 2 3 3 1 1 1',
'3 2 1 3 2 3 3 2',
'2 3 3 1 1 3 1 2',
'3 3 3 3 1 2 3 3',
'1 1 2 1 3 3 3 2',
'2 2 2 3 1 2 2 2',
'3 1 3 3 2 1 2 1',
'1 1 2 2 1 3 3 2',
'2 2 1 1 1 1 1 2',
'1 2 1 1 3 2 3 3',
'3 1 3 1 1 3 3 1',
'1 2 1 3 2 3 1 3',
'3 1 1 2 1 3 1 3',
'1 3 2 2 1 2 1 2',
'1 1 3 2 2 1 1 2',
'3 1 2 2 2 1 1 2',
'2 2 3 2 2 2 2 3',
'3 2 1 1 2 2 3 2',
'3 1 3 3 3 3 1 2',
'2 2 3 2 1 2 3 1',
'2 2 2 1 1 3 3 1',
'2 1 2 1 1 3 1 2',
'1 1 3 2 1 2 1 2',
'2 3 3 3 3 3 1 2',
'2 3 1 1 3 2 2 2',
'2 2 3 1 1 3 2 3',
'1 3 1 3 1 2 3 1',
'1 3 3 2 2 2 3 2',
'3 2 1 3 1 3 3 2',
'2 2 3 3 1 2 1 1',
'1 1 3 2 3 2 1 1',
'2 3 2 3 3 3 1 2',
'2 2 1 1 3 3 1 1',
'1 3 1 1 2 1 2 3',
'2 3 3 2 2 2 1 1',
'1 1 3 2 1 1 2 3',
'1 3 3 2 1 3 1 2',
'2 2 2 2 3 1 1 1',
'3 2 3 2 3 3 3 2',
'1 2 3 3 3 1 2 1',
'1 3 2 2 2 1 1 1',
'1 3 3 1 2 2 2 1',
'2 2 2 1 3 2 2 3',
'1 2 2 3 3 2 1 3',
'2 2 3 2 3 1 1 3',
'2 2 1 3 2 2 2 1',
'2 3 1 1 2 3 3 2',
'3 2 2 3 1 3 3 2',
'3 2 2 1 2 3 3 1',
'3 1 1 3 2 1 3 3',
'3 1 3 2 1 1 1 2',
'2 3 3 3 3 1 1 2',
'2 1 1 2 1 1 1 2',
'3 3 3 1 2 2 2 1',
'1 2 2 1 1 3 3 2',
'3 1 1 3 2 2 2 3',
'1 2 2 3 2 1 1 1',
'1 3 1 1 3 1 1 1',
'3 1 1 2 1 2 2 1',
'2 2 1 2 3 1 2 2',
'2 2 2 2 1 3 2 1',
'2 2 3 2 3 2 3 1',
'2 2 2 1 3 3 2 3',
'2 1 3 1 1 3 3 2',
'2 3 1 2 1 3 1 3',
'2 3 2 1 1 2 3 2',
'3 3 3 3 3 3 1 1',
'2 2 3 3 2 2 3 3',
'1 2 2 1 3 2 3 3',
'1 2 3 3 2 2 1 1',
'2 2 1 2 1 2 1 1',
'3 1 2 2 2 1 2 1',
'1 1 1 2 3 1 2 2',
'2 1 1 3 3 3 3 2',
'3 3 3 1 2 1 3 1',
'2 2 1 1 1 3 3 2',
'3 2 2 1 3 2 2 3',
'1 3 1 2 2 1 2 3',
'2 3 2 1 1 2 2 2',
'3 3 3 1 2 3 3 3',
'1 2 2 1 2 1 2 1',
'3 2 2 2 1 3 3 3',
'3 1 2 2 1 3 2 2',
'3 2 1 1 3 1 1 3',
'3 1 2 3 1 1 2 2',
'3 2 2 1 1 1 3 3',
'3 3 2 1 3 2 3 2',
'2 3 3 3 2 2 2 1',
'3 2 3 2 3 2 3 3',
'3 3 3 1 3 2 2 1',
'3 1 1 2 3 2 3 1',
'1 1 2 3 2 3 1 3',
'1 3 3 2 2 3 2 2',
'3 1 2 2 3 1 3 2',
'1 1 2 3 3 2 1 2',
'3 2 1 1 2 1 3 3',
'1 2 3 3 1 1 2 3',
'3 1 1 2 1 1 1 3',
'1 3 2 3 2 2 2 2',
'3 1 3 3 2 3 2 1',
'2 3 2 2 1 1 3 1',
'3 1 3 1 1 2 3 2',
'3 3 1 3 1 1 1 3',
'3 1 1 2 2 2 3 2',
'2 1 1 3 2 2 1 1',
'2 2 2 1 3 3 3 1',
'2 1 1 3 1 3 2 3',
'1 3 1 3 3 3 2 3',
'3 2 3 1 1 1 1 1',
'2 3 2 3 1 3 1 3',
'2 1 3 2 2 2 3 3',
'3 2 2 2 3 1 3 3',
'1 1 3 2 1 3 2 2',
'1 2 1 2 3 2 2 3',
'3 2 1 3 2 2 1 2',
'1 1 2 1 3 2 1 2',
'1 1 2 1 1 2 1 2',
'3 1 2 3 1 2 1 1',
'3 2 1 3 1 3 3 3',
'3 2 3 2 1 1 1 3',
'2 1 3 1 2 2 1 3',
'3 1 1 1 3 1 3 3',
'1 1 3 1 1 1 2 2',
'2 3 3 2 1 1 3 1',
'2 3 1 2 3 1 3 1',
'1 3 3 2 3 3 3 3',
'2 3 1 1 1 2 1 1',
'2 1 1 2 2 1 3 2',
'3 3 2 1 3 1 3 3',
'3 2 2 3 2 3 1 3',
'2 1 2 2 1 1 3 1',
'3 1 2 3 1 1 2 3',
'1 1 1 2 2 1 1 3',
'2 2 3 2 1 3 2 2',
'3 2 3 3 2 2 2 2',
'3 3 2 3 2 1 2 2',
'2 3 2 3 2 2 1 1',
'2 3 2 3 1 2 2 2',
'1 2 2 1 2 2 3 2',
'3 2 3 1 1 1 3 1',
'1 3 3 1 3 3 1 1',
'2 1 3 3 3 1 2 1',
'2 1 3 2 2 1 2 1',
'3 3 3 3 2 2 3 3',
'1 2 1 2 3 3 2 3',
'2 2 3 2 1 1 3 2',
'1 2 1 3 1 2 2 3',
'2 1 3 3 3 1 3 1',
'2 3 1 2 2 1 3 1',
'2 2 3 3 1 2 1 2',
'1 2 3 3 3 1 2 3',
'3 3 2 3 1 3 3 2',
'3 3 3 1 2 3 1 2',
'2 1 3 2 2 1 2 2',
'1 2 2 1 3 2 1 3',
'3 2 3 2 3 2 1 3',
'3 3 1 3 2 1 2 3',
'2 2 2 1 3 1 1 1',
'2 2 1 1 2 2 2 1',
'1 2 1 2 3 1 3 3',
'1 1 1 2 3 1 3 2',
'3 1 2 2 3 1 1 2',
'1 1 2 2 2 1 3 3',
'2 3 3 2 1 1 1 3',
'2 1 2 3 1 2 3 1',
'2 2 3 1 1 2 2 1',
'3 3 2 2 3 3 2 1',
'2 3 1 3 3 2 3 3',
'2 3 3 1 3 2 1 2',
'2 2 2 1 1 3 1 3',
'3 3 1 3 2 3 3 3',
'1 2 1 2 3 2 1 1',
'3 3 1 2 2 2 3 1',
'2 3 2 3 3 3 1 3',
'3 2 3 3 2 1 3 3',
'3 3 3 1 3 3 2 2',
'3 1 1 1 2 2 2 1',
'3 3 2 2 1 2 2 3',
'2 3 2 3 3 1 2 3',
'1 3 1 2 2 2 3 3',
'3 3 2 2 1 3 3 1',
'1 2 1 2 1 2 3 3',
'3 3 2 3 1 2 2 1',
'3 1 2 2 3 1 1 1',
'2 1 3 3 1 1 3 1',
'3 1 1 2 2 2 3 3',
'1 3 1 3 3 1 2 2',
'1 3 3 3 1 3 2 1',
'3 1 1 1 3 1 2 3',
'1 2 2 1 2 2 2 3',
'3 1 1 2 2 1 2 1',
'3 2 2 3 1 3 1 3',
'1 3 1 3 2 2 1 1',
'1 3 1 3 2 3 1 1',
'2 3 1 3 1 3 1 2',
'3 1 1 2 3 3 2 3',
'1 3 3 1 2 2 2 2',
'1 2 2 2 1 1 2 3',
'1 2 3 1 1 2 3 1',
'1 2 1 1 2 1 3 3',
'3 3 2 1 2 3 1 2',
'1 1 3 2 3 2 2 1',
'2 2 2 2 1 2 2 1',
'1 3 3 3 1 2 1 2',
'1 2 2 1 3 1 1 1',
'3 2 2 2 2 2 1 1',
'3 3 1 2 1 2 3 1',
'1 1 2 3 1 2 3 3',
'2 2 3 2 2 3 1 1',
'3 3 2 3 3 2 3 2',
'2 2 1 3 3 3 2 2',
'3 3 3 1 3 2 3 1',
'3 3 3 3 1 3 1 3',
'1 3 2 3 3 2 1 3',
'2 2 1 1 2 2 1 3',
'1 1 3 3 3 1 3 2',
'3 1 1 2 2 1 2 2',
'2 1 2 1 3 1 2 2',
'2 1 1 3 2 3 2 3',
'1 2 1 2 1 2 2 1',
'1 2 2 2 2 2 1 1',
'2 1 1 2 2 1 1 1',
'2 3 3 3 3 1 2 1',
'3 3 2 2 1 1 3 3',
'2 1 2 1 1 1 3 1',
'2 2 1 1 3 2 2 2',
'3 2 1 1 2 3 1 2',
'3 2 1 2 3 3 3 2',
'2 3 2 3 1 1 3 3',
'1 3 2 2 1 2 1 1',
'1 1 3 2 3 1 2 2',
'1 2 2 2 1 3 1 2',
'3 2 2 2 2 2 3 1',
'1 3 1 2 1 3 1 2',
'1 3 3 1 2 2 3 1',
'2 1 1 2 1 2 2 2',
'3 3 3 3 2 3 3 2',
'2 1 1 1 3 3 3 2',
'1 3 1 2 1 1 2 3',
'2 3 2 3 1 1 1 1',
'3 1 1 1 2 3 1 2',
'2 1 3 2 2 3 2 2',
'3 1 2 1 2 2 1 2',
'1 2 3 1 1 2 2 2',
'3 3 1 2 1 2 1 1',
'3 2 1 3 1 3 1 2',
'1 3 3 2 3 1 2 1',
'2 2 3 3 2 1 2 3',
'3 2 1 2 1 3 1 1',
'3 2 2 2 3 2 1 1',
'2 3 3 3 1 3 1 1',
'2 2 1 2 1 1 3 3',
'1 1 1 1 2 3 3 1',
'1 3 1 1 3 1 1 2',
'3 1 1 3 2 2 3 3',
'1 2 2 2 3 2 3 1',
'2 2 2 1 2 1 3 1',
'2 3 2 2 2 1 1 3',
'1 3 2 2 2 2 1 2']

resultado_atual = []
NUMERO_JOGOS = 8

for i in range(NUMERO_JOGOS):
    resultado_atual.append([0,0])

while True:
    array_distancias_gols = []
    indice_jogo = int(input('ÍNDICE DO JOGO '))
    resultado_atual[indice_jogo] = [ int(x) for x in input(f'INSIRA O RESULTADO DO JOGO DE ÍNDICE {indice_jogo} ').split() ]
    print(resultado_atual)
    for jogo_feito in jogos:
        jogo_feito = [ int(x) for x in jogo_feito.split() ]
        gols_do_resultado = 0
        i = 0
        for resultado_individual in resultado_atual:
            if jogo_feito[i] == 1:
                diferenca_gols = resultado_individual[0] - resultado_individual[1]
                if diferenca_gols < 0:
                    gols_do_resultado += abs(diferenca_gols)
                elif diferenca_gols == 0:
                    gols_do_resultado += 1
            elif jogo_feito[i] == 2:
                diferenca_gols = resultado_individual[0] - resultado_individual[1]
                if diferenca_gols != 0:
                    gols_do_resultado += abs(diferenca_gols)
            else:
                diferenca_gols = resultado_individual[1] - resultado_individual[0]
                if diferenca_gols < 0:
                    gols_do_resultado += abs(diferenca_gols)
                elif diferenca_gols == 0:
                    gols_do_resultado += 1
            i += 1
        array_distancias_gols.append(gols_do_resultado)
    print(sorted(array_distancias_gols))

